# You might need to comment out some of the backup/restore files if running on soak cluster
# - check which files are present or absent by hand and update the script before running it
- name: Reinstall ZK and Kafka
  hosts: zookeeper:kafka_broker
  serial: 1
  vars_prompt:
    - name: zk_kafka
      prompt: "Reinstall ZK and Kafka? [yes(default)/no]"
      private: no
      default: true
  tasks:
    - block:
      - import_role:
          name: confluent.variables
      - import_role:
          name: confluent.common
        vars:
          install_java: false
      - name: Create Kafka Broker Client Config
        template:
          src: roles/confluent.kafka_broker/templates/client.properties.j2
          dest: "{{kafka_broker.client_config_file}}"
          mode: 0640
          owner: "{{kafka_broker_user}}"
          group: "{{kafka_broker_group}}"
        when: health_checks_enabled|bool
      - name: Stop Kafka
        systemd:
          name: "{{ kafka_broker_service_name }}"
          state: stopped
      - name: Stop ZK
        systemd:
          name: "{{ zookeeper_service_name }}"
          state: stopped
      - name: Reinstall ZK and Kafka
        include_tasks: tasks/reinstall_components.yml
        vars:
          packages: "{{ (zookeeper_packages + kafka_broker_packages) | unique}}"
          backup_files:
            - "{{ kafka_broker.config_file }}"
            - "{{ kafka_broker.systemd_override }}"
            - "{{ kafka_broker.log4j_file }}"
            - "{{ zookeeper.config_file }}"
            - "{{ zookeeper.systemd_override }}"
            - "{{ zookeeper.log4j_file }}"
      - name: Start ZK
        systemd:
          name: "{{ zookeeper_service_name }}"
          state: restarted
          daemon_reload: yes
      - name: Zookeeper Health Check
        import_role:
          name: confluent.zookeeper
          tasks_from: health_check.yml
        when: health_checks_enabled|bool
      - name: Start Kafka
        systemd:
          name: "{{ kafka_broker_service_name }}"
          state: restarted
          daemon_reload: yes
      - name: Kafka Health Check
        import_role:
          name: confluent.kafka_broker
          tasks_from: health_check.yml
        when: health_checks_enabled|bool
      - name: Sleep instead of Kafka Broker Health Check
        pause:
          minutes: 2
        when: not health_checks_enabled|bool
      when: zk_kafka|bool  
    - debug:
        msg: "Skip reinstalling Zookeeper and Kafka"
      when: not zk_kafka|bool

- name: Reinstall Schema Registry
  hosts: schema_registry
  serial: 1
  vars_prompt:
    - name: sr
      prompt: "Reinstall Schema Registry? [yes(default)/no]"
      private: no
      default: true
  tasks:
    - block:
      - import_role:
          name: confluent.variables
      - import_role:
          name: confluent.common
        vars:
          install_java: false
      - name: Reinstall Schema Registry
        include_tasks: tasks/reinstall_and_restart_components.yml
        vars:
          services:
            - "{{ schema_registry_service_name }}"
          packages: "{{ schema_registry_packages }}"
          backup_files:
            - "{{ schema_registry.config_file }}"
            - "{{ schema_registry.systemd_override }}"
            - "{{ schema_registry.log4j_file }}"
      - name: Schema Registry Health Check
        import_role:
          name: confluent.schema_registry
          tasks_from: health_check.yml
        when: health_checks_enabled|bool
      - name: Sleep instead of SR Health Check
        pause:
          minutes: 1
        when: not health_checks_enabled|bool
      when: sr|bool
    - debug:
        msg: "Skip reinstalling Schema Registry"
      when: not sr|bool

- name: Reinstall Connect and KSQL
  hosts: kafka_connect:ksql
  serial: 1
  vars_prompt:
    - name: connect_ksql
      prompt: "Reinstall Connect and KSQL? [yes(default)/no]"
      private: no
      default: true
  tasks:
    - block:
      - import_role:
          name: confluent.variables
      - import_role:
          name: confluent.common
        vars:
          install_java: false
      - name: Reinstall Connect and KSQL
        include_tasks: tasks/reinstall_and_restart_components.yml
        vars:
          services:
            - "{{ kafka_connect_service_name }}"
            - "{{ ksql_service_name }}"
          # control center for monitoring; schema registry for AVRO stuff
          packages: "{{ (kafka_connect_packages + ksql_packages + schema_registry_packages + control_center_packages) | unique}}"
          # packages: "{{ (kafka_connect_packages + schema_registry_packages + control_center_packages) | unique}}"
          backup_files:
            - "{{ kafka_connect.config_file }}"
            - "{{ kafka_connect.systemd_override }}"
            - "{{ kafka_connect.log4j_file }}"
            - "{{ ksql.config_file }}"
            - "{{ ksql.systemd_override }}"
            - "{{ ksql.log4j_file }}"
      - name: KSQL Health Check
        import_role:
          name: confluent.ksql
          tasks_from: health_check.yml
        when: health_checks_enabled|bool
      - name: Kafka Connect Health Check
        import_role:
          name: confluent.kafka_connect
          tasks_from: health_check.yml
        when: health_checks_enabled|bool
      - name: Sleep instead of Connect and KSQL Health Checks
        pause:
          # connect takes a bit to start
          minutes: 2
        when: not health_checks_enabled|bool
      when: connect_ksql|bool
    - debug:
        msg: "Skip reinstalling KSQL and Connect"
      when: not connect_ksql|bool

- name: Reinstall REST Proxy and C3
  hosts: kafka_rest:control_center
  serial: 1
  vars_prompt:
    - name: rest_c3
      prompt: "Reinstall REST Proxy and C3? [yes(default)/no]"
      private: no
      default: true
  tasks:
    - block:
      - import_role:
          name: confluent.variables
      - import_role:
          name: confluent.common
        vars:
          install_java: false
      - name: Reinstall REST Proxy and C3
        include_tasks: tasks/reinstall_and_restart_components.yml
        vars:
          services:
            - "{{ kafka_rest_service_name }}"
            - "{{ control_center_service_name }}"
          # schema registry packages might be needed by rest proxy for AVRO stuff. Not sure about control center, might also need it.
          packages: "{{ (kafka_rest_packages + control_center_packages + schema_registry_packages) | unique}}"
          backup_files:
            - "{{ kafka_rest.config_file }}"
            - "{{ kafka_rest.systemd_override }}"
            - "{{ kafka_rest.log4j_file }}"
            - "{{ control_center.config_file }}"
            - "{{ control_center.systemd_override }}"
            - "{{ control_center.log4j_file }}"
      - name: Kafka Rest Health Check
        import_role:
          name: confluent.kafka_rest
          tasks_from: health_check.yml
        when: health_checks_enabled|bool
      - name: Control Center Health Check
        import_role:
          name: confluent.control_center
          tasks_from: health_check.yml
        when: health_checks_enabled|bool
      - name: Sleep instead of REST Proxy and C3 Health Checks
        pause:
          # C3 takes some time to start up usually, give it a minute
          minutes: 2
        when: not health_checks_enabled|bool
      when: rest_c3|bool
    - debug:
        msg: "Skip reinstalling REST Proxy and C3"
      when: not rest_c3|bool
      
    


    
