# Maintained by Ansible

# KSQL Configuration
listeners={{ksql_http_protocol}}://0.0.0.0:{{ksql_listener_port}}

# Kafka Broker Configuration
bootstrap.servers={% for host in groups['kafka_broker'] %}{% if loop.index > 1%},{% endif %}{{ host }}:{{kafka_broker_listeners[ksql_kafka_listener_name]['port']}}{% endfor %}

security.protocol={{kafka_broker_listeners[ksql_kafka_listener_name] | kafka_protocol_defaults(sasl_protocol, ssl_enabled) }}
{% if kafka_broker_listeners[ksql_kafka_listener_name]['ssl_enabled'] | default(ssl_enabled) | bool %}
# KSQL SSL properties shared with Kafka Broker
ssl.truststore.location={{ksql_truststore_path}}
ssl.truststore.password={{ksql_truststore_storepass}}
ssl.keystore.location={{ksql_keystore_path}}
ssl.keystore.password={{ksql_keystore_storepass}}
ssl.key.password={{ksql_keystore_keypass}}
{% endif %}
{% if kafka_broker_listeners[ksql_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'PLAIN' %}
sasl.mechanism=PLAIN
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
   username="{{sasl_plain_users.ksql.principal}}" password="{{sasl_plain_users.ksql.password}}";
{% endif %}
{% if kafka_broker_listeners[ksql_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'GSSAPI' %}
sasl.mechanism=GSSAPI
sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
   useKeyTab=true \
   storeKey=true \
   keyTab="{{kerberos.keytab_dir}}/{{ksql_kerberos_keytab_path | basename}}" \
   principal="{{ksql_kerberos_principal}}";
{% endif %}
{% if kafka_broker_listeners[ksql_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'SCRAM-SHA-256' %}
sasl.mechanism=SCRAM-SHA-256
sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
   username="{{sasl_scram_users.ksql.principal}}" password="{{sasl_scram_users.ksql.password}}";
{% endif %}

{% for key, value in ksql.properties.items() %}
{{key}}={{value}}
{% endfor %}

{% set schema_registries = groups.get('schema_registry', []) %}
{% if schema_registries %}
# Schema Registry Configuration
ksql.schema.registry.url={% for host in groups['schema_registry'] %}{% if loop.index > 1%},{% endif %}{{ schema_registry_http_protocol }}://{{ host }}:{{ schema_registry_listener_port }}{% endfor %}

{% if schema_registry_ssl_enabled|bool %}
ksql.schema.registry.ssl.truststore.location={{ksql_truststore_path}}
ksql.schema.registry.ssl.truststore.password={{ksql_truststore_storepass}}
ksql.schema.registry.ssl.keystore.location={{ksql_keystore_path}}
ksql.schema.registry.ssl.keystore.password={{ksql_keystore_storepass}}
ksql.schema.registry.ssl.key.password={{ksql_keystore_keypass}}
{% endif %}
{% endif %}

# Monitoring Configuration
producer.interceptor.classes=io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
consumer.interceptor.classes=io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
confluent.monitoring.interceptor.security.protocol={{kafka_broker_listeners[ksql_kafka_listener_name] | kafka_protocol_defaults(sasl_protocol, ssl_enabled) }}
{% if kafka_broker_listeners[ksql_kafka_listener_name]['ssl_enabled'] | default(ssl_enabled) | bool %}
confluent.monitoring.interceptor.ssl.truststore.location={{ksql_truststore_path}}
confluent.monitoring.interceptor.ssl.truststore.password={{ksql_truststore_storepass}}
{% if kafka_broker_listeners[ksql_kafka_listener_name]['ssl_mutual_auth_enabled'] | default(ssl_mutual_auth_enabled) | bool %}
confluent.monitoring.interceptor.ssl.keystore.location={{ksql_keystore_path}}
confluent.monitoring.interceptor.ssl.keystore.password={{ksql_keystore_storepass}}
confluent.monitoring.interceptor.ssl.key.password={{ksql_keystore_keypass}}
{% endif %}
{% endif %}
{% if kafka_broker_listeners[ksql_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'PLAIN' %}
confluent.monitoring.interceptor.sasl.mechanism=PLAIN
confluent.monitoring.interceptor.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
   username="{{sasl_plain_users.ksql.principal}}" password="{{sasl_plain_users.ksql.password}}";
{% endif %}
{% if kafka_broker_listeners[ksql_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'GSSAPI' %}
confluent.monitoring.interceptor.sasl.mechanism=GSSAPI
confluent.monitoring.interceptor.sasl.kerberos.service.name={{kerberos_kafka_broker_primary}}
confluent.monitoring.interceptor.sasl.jaas.config=com.sun.security.auth.module.Krb5LoginModule required \
   useKeyTab=true \
   storeKey=true \
   keyTab="{{kerberos.keytab_dir}}/{{ksql_kerberos_keytab_path | basename}}" \
   principal="{{ksql_kerberos_principal}}";
{% endif %}
{% if kafka_broker_listeners[ksql_kafka_listener_name]['sasl_protocol'] | default(sasl_protocol) | normalize_sasl_protocol == 'SCRAM-SHA-256' %}
confluent.monitoring.interceptor.sasl.mechanism=SCRAM-SHA-256
confluent.monitoring.interceptor.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
   username="{{sasl_scram_users.ksql.principal}}" password="{{sasl_scram_users.ksql.password}}";
{% endif %}
